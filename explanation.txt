*주택금융 공급현황 분석 서비스
: 국내 주택금융 신용보증 기관으로부터 년도별 각 금융기관(은행)에서 신용보증한 금액에 대한 데이터가 주어집니다.
이를 기반으로 아래 기능명세에 대한 API 를 개발하고 각 기능별 Unit Test 코드를 개발하세요.

*데이터:
• 주택금융 공급현황 분석 데이터 (첨부)
• 데이터는 csv 파일로 각 레코드에 컬럼값은 ‘,’ 구분자로 저장이 되어있습니다.
• 아래는 데이터 샘플입니다.

 *API 기능명세
기본 문제 (필수):
• 데이터 파일에서 각 레코드를 데이터베이스에 저장하는 API 개발
• 주택금융 공급 금융기관(은행) 목록을 출력하는 API 를 개발하세요.
• 년도별 각 금융기관의 지원금액 합계를 출력하는 API 를 개발하세요.


입/출력 샘플 예제:
출력
{
“name”:”주택금융 공급현황”, [
{
{
“year”:"2004 년”, “total_amount”: 14145, “detail_amount”:
{“주택도시기금”: 2143,”국민은행”: 4356,”우리은행”: 5342,...,”기타은행”: 1324}, “year”:"2005 년”,

    ...
] }
{
“total_amount”: 23145, “detail_amount”:
{“주택도시기금”: 1243,”국민은행”: 5336,”우리은행”: 4849,...,”기타은행”: 1093},
“year”:"2017 년”, “total_amount”: 33145, “detail_amount”:
{“주택도시기금”: 2240,”국민은행”: 4338,”우리은행”: 5131,...,”기타은행”: 1392}

 • 각년도별 각기관의 전체지원금액중에서 가장 큰금액의 기관명을 출력하는API 개발
 o 예를들어, 2005 년 ~2017 년 중에 2010 년 국민은행의 전체
지원금액(1 월~12 월 지원 합계)이 가장 높았다면 { “year": “2010” , "bank": “국민은행”}을 결과로 출력합니다.
입/출력 샘플 예제:
    출력
   {
“year": 2010 , "bank": “국민은행”
}

 • 전체 년도(2005~2016)에서 외환은행의 지원금액 평균 중에서 가장 작은 금액과 큰 금액을 출력하는 API 개발
o 예를들어, 2005 년 ~ 2016 년 외환은행의 평균 지원금액 (매년 12 달의 지원금액 평균값)을 계산하여 가장 작은 값과 큰 값을 출력합니다. 소수점 이하는 반올림해서 계산하세요.
입/출력 샘플 예제:
    출력
   {
“bank”:”외환은행”, "support_amount”: [
{ ”year”: 2008 , ”amount”: 78},

       { ”year”: 2015 , ”amount”: 1702} ]
}
 선택 문제 (옵션):
• 특정 은행의 특정 달에 대해서 2018년도 해당 달에 금융지원 금액을 예측하는 API 개발
o 단, 예측 알고리즘을 무엇을 써야하는지에 대한 제약은 없지만, 가장 근사치에 가까울 수록 높은 점수 부여.
입/출력 샘플 예제:
아래 결과는 알고리즘에 따라서 다를 수 있지만, 근사치를 제시해 드린겁니다. 데이터는 2005 년부터 2017 년까지의 데이터로 2018 년 금융지원 금약을 예측하시면 됩니다.
    입력
    {
“bank”:”국민은행”, “month”: 2
}
     출력
  {
“bank”:”bnk3726”, “year”: 2018 “month”: 2, "amount”: 4850
}
 예를들어, 국민은행의 기관코드가 “bnk3726”라는 가정으로, 국민은행이 2018 년도 2 월달에 4850 억을 지원할것이라는 예측 결과 입니다.

*기본 제약사항(필수):
• API 기능명세에 나온 API 를 개발하세요.
• 데이터 영속성 관리 및 매핑을 위한 ORM(Object Relational Mapping)을 사용하여
각 엔티티를 정의하고 레퍼지토리를 개발하세요.

o 예를들어, Java의 경우 JPA, Python의 경우 SQLAlchemy 적용
o 단, 엔티티 디자인은 지원자의 문제해결 방법에 따라 자유롭게 합니다.
o 단, 주택금융 공급기관은 독립 엔티티(기관명과 기관코드)로 디자인합니다.
{“institute_name”, “institute_code”}

• 단위 테스트 (Unit Test) 코드를 개발하여 각 기능을 검증하세요.
• 모든 입/출력은 JSON 형태로 주고 받습니다.
• README.md 파일을 추가하여, 개발 프레임워크, 문제해결 전략, 빌드 및 실행 방법을
기술하세요.
• 단, 프로그램 언어는 평가에 반영되지 않으니 자유롭게 선택하세요.
• 단, 각 API 의 HTTP Method 들( GET | POST | PUT | DEL )은 알아서 선택하세요.

*추가 제약사항(옵션):
• API 인증을 위해 JWT(Json Web Token)를 이용해서 Token 기반 API 인증 기능을 개발하고 각 API 호출 시에 HTTP Header 에 발급받은 토큰을 가지고 호출하세요.
o signup 계정생성 API: 입력으로 ID, PW 받아 내부 DB 에 계정 저장하고 토큰 생성하여 출력
§ 단, 패스워드는 인코딩하여 저장한다.
§ 단, 토큰은 특정 secret 으로 서명하여 생성한다.
o signin 로그인 API: 입력으로 생성된 계정 (ID, PW)으로 로그인 요청하면
토큰을 발급한다.
o refresh 토큰 재발급 API: 기존에 발급받은 토큰을 Authorization 헤더에
“Bearer Token”으로 입력 요청을 하면 토큰을 재발급한다.